name: CodeQL

on:
  push:
    branches:
      - feat/tests-green-openapi-swagger-ok-20251007
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  smoke:
    name: Smoke
    runs-on: ubuntu-latest
    steps:
      - run: echo "smoke ok (event=${{ github.event_name }}, sha=${{ github.sha }})"

  codeql:
    name: CodeQL (java-kotlin)
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java-kotlin
          build-mode: manual

      - name: Build (manual for CodeQL)
        shell: bash
        run: |
          set -euxo pipefail
          export ORG_GRADLE_JAVA_HOME="$JAVA_HOME"

          if [ -x ./gradlew ]; then
            ./gradlew --version
            ./gradlew -Dorg.gradle.java.home="$JAVA_HOME" --no-daemon --stacktrace --info \
              -x test -x check -x jacocoTestReport -x ktlintCheck -x detekt -x spotbugsMain -x spotbugsTest \
              assemble
          else
            WRAPPER=$(git ls-files | grep '/gradlew$' | head -n1 || true)
            if [ -n "$WRAPPER" ]; then
              DIR=$(dirname "$WRAPPER")
              (cd "$DIR" && ./gradlew --version)
              (cd "$DIR" && ./gradlew -Dorg.gradle.java.home="$JAVA_HOME" --no-daemon --stacktrace --info \
                -x test -x check -x jacocoTestReport -x ktlintCheck -x detekt -x spotbugsMain -x spotbugsTest \
                assemble)
            else
              echo "::warning ::No gradlew found; skipping manual build (buildless extraction may limit results)"
            fi
          fi

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3