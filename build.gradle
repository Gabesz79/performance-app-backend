plugins {
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'java'
    id 'jacoco'
}

group = 'hu.performance'              // tetszőleges; nem kötelező
version = '0.1.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    // --- Spring starters ---
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator' // hasznos health/info/metrics

    // --- DB & migráció ---
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    runtimeOnly   'org.postgresql:postgresql'

    // (opcionális dev/test H2 – ha kell)
    testRuntimeOnly 'com.h2database:h2'

    // --- Kényelmi cuccok ---
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // --- Teszt ---
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // Testcontainers majd külön PR-ben:
    // testImplementation 'org.testcontainers:junit-jupiter'
    // testImplementation 'org.testcontainers:postgresql'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = '0.8.12'
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
    // Ha később bizonyos csomagokat ki akarsz zárni a reportból:
    // classDirectories.setFrom(
    //     files(classDirectories.files.collect {
    //         fileTree(dir: it, exclude: ['**/config/**', '**/dto/**'])
    //     })
    // )
}

jacocoTestCoverageVerification {
    dependsOn test
    violationRules {
        rule {
            element = 'BUNDLE'
            // indulásnak 0%; ha már vannak érdemi tesztek, emeljük 0.60–0.70-re
            limit { minimum = 0.0 }
        }
    }
    // Ha a reportban kizártál csomagokat, itt is tükrözd ugyanazt:
    // classDirectories.setFrom(tasks.jacocoTestReport.classDirectories)
}

check {
    dependsOn jacocoTestCoverageVerification
}
