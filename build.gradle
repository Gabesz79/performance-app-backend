plugins {
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'java'
    id 'jacoco'
}

group = 'hu.performance'
version = '0.1.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    //implementation platform('org.springframework.boot:spring-boot-dependencies:3.4.4')
    // --- Spring starters ---
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //fontos: 2.7.x vagy frissebb kell Spring 6.2-höz - kényszerítenem kell a verziókezelés(egyezés) miatt
    implementation('org.springdoc:springdoc-openapi-starter-webmvc-ui') {
        version { strictly '2.7.0' }
    }

    // --- DB & migrations ---
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    runtimeOnly  'org.postgresql:postgresql:42.7.7'

    // --- Lombok ---
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // --- Test ---
    testImplementation 'org.springframework.boot:spring-boot-starter-test' // JUnit 5, Mockito, AssertJ, Spring Test
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher' // IDE futtatáshoz hasznos
    testImplementation 'org.testcontainers:postgresql'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = '0.8.12'
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
}

jacocoTestCoverageVerification {
    dependsOn test
    violationRules {
        rule {
            limit {
                minimum = 0 // 0% gate – később emelhető
            }
        }
    }
}

configurations.all {
    resolutionStrategy.eachDependency { d ->
        if (d.requested.group == 'org.springdoc') {
            d.useVersion '2.7.0'
        }
    }
}

